(function() {var implementors = {};
implementors["af_opencl_interop"] = [{"text":"impl Clone for VendorPlatform","synthetic":false,"types":[]},{"text":"impl Clone for DeviceType","synthetic":false,"types":[]}];
implementors["arrayfire"] = [{"text":"impl&lt;T&gt; Clone for Array&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HasAfEnum,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for AfError","synthetic":false,"types":[]},{"text":"impl Clone for Backend","synthetic":false,"types":[]},{"text":"impl Clone for DType","synthetic":false,"types":[]},{"text":"impl Clone for InterpType","synthetic":false,"types":[]},{"text":"impl Clone for BorderType","synthetic":false,"types":[]},{"text":"impl Clone for Connectivity","synthetic":false,"types":[]},{"text":"impl Clone for ConvMode","synthetic":false,"types":[]},{"text":"impl Clone for ConvDomain","synthetic":false,"types":[]},{"text":"impl Clone for MatchType","synthetic":false,"types":[]},{"text":"impl Clone for ColorSpace","synthetic":false,"types":[]},{"text":"impl Clone for MatProp","synthetic":false,"types":[]},{"text":"impl Clone for NormType","synthetic":false,"types":[]},{"text":"impl Clone for ColorMap","synthetic":false,"types":[]},{"text":"impl Clone for YCCStd","synthetic":false,"types":[]},{"text":"impl Clone for HomographyType","synthetic":false,"types":[]},{"text":"impl Clone for MarkerType","synthetic":false,"types":[]},{"text":"impl Clone for MomentType","synthetic":false,"types":[]},{"text":"impl Clone for SparseFormat","synthetic":false,"types":[]},{"text":"impl Clone for BinaryOp","synthetic":false,"types":[]},{"text":"impl Clone for RandomEngineType","synthetic":false,"types":[]},{"text":"impl Clone for Scalar","synthetic":false,"types":[]},{"text":"impl Clone for CannyThresholdType","synthetic":false,"types":[]},{"text":"impl Clone for DiffusionEq","synthetic":false,"types":[]},{"text":"impl Clone for FluxFn","synthetic":false,"types":[]},{"text":"impl Clone for TopkFn","synthetic":false,"types":[]},{"text":"impl Clone for IterativeDeconvAlgo","synthetic":false,"types":[]},{"text":"impl Clone for InverseDeconvAlgo","synthetic":false,"types":[]},{"text":"impl Clone for ConvGradientType","synthetic":false,"types":[]},{"text":"impl Clone for VarianceBias","synthetic":false,"types":[]},{"text":"impl Clone for CublasMathMode","synthetic":false,"types":[]},{"text":"impl Clone for Dim4","synthetic":false,"types":[]},{"text":"impl Clone for RandomEngine","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + IndexableType&gt; Clone for Seq&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Window","synthetic":false,"types":[]},{"text":"impl Clone for Features","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()