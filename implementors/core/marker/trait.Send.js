(function() {var implementors = {};
implementors["af_opencl_interop"] = [{"text":"impl Send for VendorPlatform","synthetic":true,"types":[]},{"text":"impl Send for DeviceType","synthetic":true,"types":[]}];
implementors["arrayfire"] = [{"text":"impl Send for Dim4","synthetic":true,"types":[]},{"text":"impl Send for Callback","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Seq&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Send for Window","synthetic":true,"types":[]},{"text":"impl Send for AfError","synthetic":true,"types":[]},{"text":"impl Send for Backend","synthetic":true,"types":[]},{"text":"impl Send for DType","synthetic":true,"types":[]},{"text":"impl Send for InterpType","synthetic":true,"types":[]},{"text":"impl Send for BorderType","synthetic":true,"types":[]},{"text":"impl Send for Connectivity","synthetic":true,"types":[]},{"text":"impl Send for ConvMode","synthetic":true,"types":[]},{"text":"impl Send for ConvDomain","synthetic":true,"types":[]},{"text":"impl Send for MatchType","synthetic":true,"types":[]},{"text":"impl Send for ColorSpace","synthetic":true,"types":[]},{"text":"impl Send for MatProp","synthetic":true,"types":[]},{"text":"impl Send for NormType","synthetic":true,"types":[]},{"text":"impl Send for ColorMap","synthetic":true,"types":[]},{"text":"impl Send for YCCStd","synthetic":true,"types":[]},{"text":"impl Send for HomographyType","synthetic":true,"types":[]},{"text":"impl Send for MarkerType","synthetic":true,"types":[]},{"text":"impl Send for MomentType","synthetic":true,"types":[]},{"text":"impl Send for SparseFormat","synthetic":true,"types":[]},{"text":"impl Send for BinaryOp","synthetic":true,"types":[]},{"text":"impl Send for RandomEngineType","synthetic":true,"types":[]},{"text":"impl Send for Scalar","synthetic":true,"types":[]},{"text":"impl Send for CannyThresholdType","synthetic":true,"types":[]},{"text":"impl Send for DiffusionEq","synthetic":true,"types":[]},{"text":"impl Send for FluxFn","synthetic":true,"types":[]},{"text":"impl Send for TopkFn","synthetic":true,"types":[]},{"text":"impl Send for IterativeDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Send for InverseDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Send for ConvGradientType","synthetic":true,"types":[]},{"text":"impl Send for VarianceBias","synthetic":true,"types":[]},{"text":"impl Send for CublasMathMode","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;HasAfEnum&gt; Send for Array&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for Event","synthetic":false,"types":[]},{"text":"impl&lt;'object&gt; Send for Indexer&lt;'object&gt;","synthetic":false,"types":[]},{"text":"impl Send for RandomEngine","synthetic":false,"types":[]},{"text":"impl Send for Features","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()