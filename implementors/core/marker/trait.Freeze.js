(function() {var implementors = {};
implementors["af_opencl_interop"] = [{"text":"impl Freeze for VendorPlatform","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceType","synthetic":true,"types":[]}];
implementors["arrayfire"] = [{"text":"impl&lt;T&gt; Freeze for Array&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Dim4","synthetic":true,"types":[]},{"text":"impl Freeze for Callback","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl&lt;'object&gt; Freeze for Indexer&lt;'object&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RandomEngine","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Seq&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Window","synthetic":true,"types":[]},{"text":"impl Freeze for Features","synthetic":true,"types":[]},{"text":"impl Freeze for AfError","synthetic":true,"types":[]},{"text":"impl Freeze for Backend","synthetic":true,"types":[]},{"text":"impl Freeze for DType","synthetic":true,"types":[]},{"text":"impl Freeze for InterpType","synthetic":true,"types":[]},{"text":"impl Freeze for BorderType","synthetic":true,"types":[]},{"text":"impl Freeze for Connectivity","synthetic":true,"types":[]},{"text":"impl Freeze for ConvMode","synthetic":true,"types":[]},{"text":"impl Freeze for ConvDomain","synthetic":true,"types":[]},{"text":"impl Freeze for MatchType","synthetic":true,"types":[]},{"text":"impl Freeze for ColorSpace","synthetic":true,"types":[]},{"text":"impl Freeze for MatProp","synthetic":true,"types":[]},{"text":"impl Freeze for NormType","synthetic":true,"types":[]},{"text":"impl Freeze for ColorMap","synthetic":true,"types":[]},{"text":"impl Freeze for YCCStd","synthetic":true,"types":[]},{"text":"impl Freeze for HomographyType","synthetic":true,"types":[]},{"text":"impl Freeze for MarkerType","synthetic":true,"types":[]},{"text":"impl Freeze for MomentType","synthetic":true,"types":[]},{"text":"impl Freeze for SparseFormat","synthetic":true,"types":[]},{"text":"impl Freeze for BinaryOp","synthetic":true,"types":[]},{"text":"impl Freeze for RandomEngineType","synthetic":true,"types":[]},{"text":"impl Freeze for Scalar","synthetic":true,"types":[]},{"text":"impl Freeze for CannyThresholdType","synthetic":true,"types":[]},{"text":"impl Freeze for DiffusionEq","synthetic":true,"types":[]},{"text":"impl Freeze for FluxFn","synthetic":true,"types":[]},{"text":"impl Freeze for TopkFn","synthetic":true,"types":[]},{"text":"impl Freeze for IterativeDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Freeze for InverseDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Freeze for ConvGradientType","synthetic":true,"types":[]},{"text":"impl Freeze for VarianceBias","synthetic":true,"types":[]},{"text":"impl Freeze for CublasMathMode","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()