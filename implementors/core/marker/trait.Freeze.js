(function() {var implementors = {};
implementors["arrayfire"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arrayfire/struct.Array.html\" title=\"struct arrayfire::Array\">Array</a>&lt;T&gt;","synthetic":true,"types":["arrayfire::array::Array"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.Dim4.html\" title=\"struct arrayfire::Dim4\">Dim4</a>","synthetic":true,"types":["arrayfire::dim4::Dim4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.Callback.html\" title=\"struct arrayfire::Callback\">Callback</a>","synthetic":true,"types":["arrayfire::error::Callback"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.Event.html\" title=\"struct arrayfire::Event\">Event</a>","synthetic":true,"types":["arrayfire::event::Event"]},{"text":"impl&lt;'object&gt; Freeze for <a class=\"struct\" href=\"arrayfire/struct.Indexer.html\" title=\"struct arrayfire::Indexer\">Indexer</a>&lt;'object&gt;","synthetic":true,"types":["arrayfire::index::Indexer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"arrayfire/struct.Seq.html\" title=\"struct arrayfire::Seq\">Seq</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["arrayfire::seq::Seq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.Window.html\" title=\"struct arrayfire::Window\">Window</a>","synthetic":true,"types":["arrayfire::graphics::Window"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.RandomEngine.html\" title=\"struct arrayfire::RandomEngine\">RandomEngine</a>","synthetic":true,"types":["arrayfire::random::RandomEngine"]},{"text":"impl Freeze for <a class=\"struct\" href=\"arrayfire/struct.Features.html\" title=\"struct arrayfire::Features\">Features</a>","synthetic":true,"types":["arrayfire::vision::Features"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.AfError.html\" title=\"enum arrayfire::AfError\">AfError</a>","synthetic":true,"types":["arrayfire::defines::AfError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.Backend.html\" title=\"enum arrayfire::Backend\">Backend</a>","synthetic":true,"types":["arrayfire::defines::Backend"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.DType.html\" title=\"enum arrayfire::DType\">DType</a>","synthetic":true,"types":["arrayfire::defines::DType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.InterpType.html\" title=\"enum arrayfire::InterpType\">InterpType</a>","synthetic":true,"types":["arrayfire::defines::InterpType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.BorderType.html\" title=\"enum arrayfire::BorderType\">BorderType</a>","synthetic":true,"types":["arrayfire::defines::BorderType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.Connectivity.html\" title=\"enum arrayfire::Connectivity\">Connectivity</a>","synthetic":true,"types":["arrayfire::defines::Connectivity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.ConvMode.html\" title=\"enum arrayfire::ConvMode\">ConvMode</a>","synthetic":true,"types":["arrayfire::defines::ConvMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.ConvDomain.html\" title=\"enum arrayfire::ConvDomain\">ConvDomain</a>","synthetic":true,"types":["arrayfire::defines::ConvDomain"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.MatchType.html\" title=\"enum arrayfire::MatchType\">MatchType</a>","synthetic":true,"types":["arrayfire::defines::MatchType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.ColorSpace.html\" title=\"enum arrayfire::ColorSpace\">ColorSpace</a>","synthetic":true,"types":["arrayfire::defines::ColorSpace"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.MatProp.html\" title=\"enum arrayfire::MatProp\">MatProp</a>","synthetic":true,"types":["arrayfire::defines::MatProp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.NormType.html\" title=\"enum arrayfire::NormType\">NormType</a>","synthetic":true,"types":["arrayfire::defines::NormType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.ColorMap.html\" title=\"enum arrayfire::ColorMap\">ColorMap</a>","synthetic":true,"types":["arrayfire::defines::ColorMap"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.YCCStd.html\" title=\"enum arrayfire::YCCStd\">YCCStd</a>","synthetic":true,"types":["arrayfire::defines::YCCStd"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.HomographyType.html\" title=\"enum arrayfire::HomographyType\">HomographyType</a>","synthetic":true,"types":["arrayfire::defines::HomographyType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.MarkerType.html\" title=\"enum arrayfire::MarkerType\">MarkerType</a>","synthetic":true,"types":["arrayfire::defines::MarkerType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.MomentType.html\" title=\"enum arrayfire::MomentType\">MomentType</a>","synthetic":true,"types":["arrayfire::defines::MomentType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.SparseFormat.html\" title=\"enum arrayfire::SparseFormat\">SparseFormat</a>","synthetic":true,"types":["arrayfire::defines::SparseFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.BinaryOp.html\" title=\"enum arrayfire::BinaryOp\">BinaryOp</a>","synthetic":true,"types":["arrayfire::defines::BinaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.RandomEngineType.html\" title=\"enum arrayfire::RandomEngineType\">RandomEngineType</a>","synthetic":true,"types":["arrayfire::defines::RandomEngineType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.Scalar.html\" title=\"enum arrayfire::Scalar\">Scalar</a>","synthetic":true,"types":["arrayfire::defines::Scalar"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.CannyThresholdType.html\" title=\"enum arrayfire::CannyThresholdType\">CannyThresholdType</a>","synthetic":true,"types":["arrayfire::defines::CannyThresholdType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.DiffusionEq.html\" title=\"enum arrayfire::DiffusionEq\">DiffusionEq</a>","synthetic":true,"types":["arrayfire::defines::DiffusionEq"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.FluxFn.html\" title=\"enum arrayfire::FluxFn\">FluxFn</a>","synthetic":true,"types":["arrayfire::defines::FluxFn"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.TopkFn.html\" title=\"enum arrayfire::TopkFn\">TopkFn</a>","synthetic":true,"types":["arrayfire::defines::TopkFn"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.IterativeDeconvAlgo.html\" title=\"enum arrayfire::IterativeDeconvAlgo\">IterativeDeconvAlgo</a>","synthetic":true,"types":["arrayfire::defines::IterativeDeconvAlgo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.InverseDeconvAlgo.html\" title=\"enum arrayfire::InverseDeconvAlgo\">InverseDeconvAlgo</a>","synthetic":true,"types":["arrayfire::defines::InverseDeconvAlgo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.ConvGradientType.html\" title=\"enum arrayfire::ConvGradientType\">ConvGradientType</a>","synthetic":true,"types":["arrayfire::defines::ConvGradientType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.VarianceBias.html\" title=\"enum arrayfire::VarianceBias\">VarianceBias</a>","synthetic":true,"types":["arrayfire::defines::VarianceBias"]},{"text":"impl Freeze for <a class=\"enum\" href=\"arrayfire/enum.CublasMathMode.html\" title=\"enum arrayfire::CublasMathMode\">CublasMathMode</a>","synthetic":true,"types":["arrayfire::defines::CublasMathMode"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()