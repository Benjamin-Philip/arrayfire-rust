(function() {var implementors = {};
implementors["af_opencl_interop"] = [{"text":"impl Unpin for VendorPlatform","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceType","synthetic":true,"types":[]}];
implementors["arrayfire"] = [{"text":"impl&lt;T&gt; Unpin for Array&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Dim4","synthetic":true,"types":[]},{"text":"impl Unpin for Callback","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl&lt;'object&gt; Unpin for Indexer&lt;'object&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RandomEngine","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Seq&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Window","synthetic":true,"types":[]},{"text":"impl Unpin for Features","synthetic":true,"types":[]},{"text":"impl Unpin for AfError","synthetic":true,"types":[]},{"text":"impl Unpin for Backend","synthetic":true,"types":[]},{"text":"impl Unpin for DType","synthetic":true,"types":[]},{"text":"impl Unpin for InterpType","synthetic":true,"types":[]},{"text":"impl Unpin for BorderType","synthetic":true,"types":[]},{"text":"impl Unpin for Connectivity","synthetic":true,"types":[]},{"text":"impl Unpin for ConvMode","synthetic":true,"types":[]},{"text":"impl Unpin for ConvDomain","synthetic":true,"types":[]},{"text":"impl Unpin for MatchType","synthetic":true,"types":[]},{"text":"impl Unpin for ColorSpace","synthetic":true,"types":[]},{"text":"impl Unpin for MatProp","synthetic":true,"types":[]},{"text":"impl Unpin for NormType","synthetic":true,"types":[]},{"text":"impl Unpin for ColorMap","synthetic":true,"types":[]},{"text":"impl Unpin for YCCStd","synthetic":true,"types":[]},{"text":"impl Unpin for HomographyType","synthetic":true,"types":[]},{"text":"impl Unpin for MarkerType","synthetic":true,"types":[]},{"text":"impl Unpin for MomentType","synthetic":true,"types":[]},{"text":"impl Unpin for SparseFormat","synthetic":true,"types":[]},{"text":"impl Unpin for BinaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for RandomEngineType","synthetic":true,"types":[]},{"text":"impl Unpin for Scalar","synthetic":true,"types":[]},{"text":"impl Unpin for CannyThresholdType","synthetic":true,"types":[]},{"text":"impl Unpin for DiffusionEq","synthetic":true,"types":[]},{"text":"impl Unpin for FluxFn","synthetic":true,"types":[]},{"text":"impl Unpin for TopkFn","synthetic":true,"types":[]},{"text":"impl Unpin for IterativeDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Unpin for InverseDeconvAlgo","synthetic":true,"types":[]},{"text":"impl Unpin for ConvGradientType","synthetic":true,"types":[]},{"text":"impl Unpin for VarianceBias","synthetic":true,"types":[]},{"text":"impl Unpin for CublasMathMode","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()