(function() {var implementors = {};
implementors["arrayfire"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"arrayfire/struct.Window.html\" title=\"struct arrayfire::Window\">Window</a>","synthetic":false,"types":["arrayfire::graphics::Window"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"arrayfire/struct.RandomEngine.html\" title=\"struct arrayfire::RandomEngine\">RandomEngine</a>","synthetic":false,"types":["arrayfire::random::RandomEngine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.AfError.html\" title=\"enum arrayfire::AfError\">AfError</a>","synthetic":false,"types":["arrayfire::defines::AfError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.DType.html\" title=\"enum arrayfire::DType\">DType</a>","synthetic":false,"types":["arrayfire::defines::DType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.InterpType.html\" title=\"enum arrayfire::InterpType\">InterpType</a>","synthetic":false,"types":["arrayfire::defines::InterpType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.ConvMode.html\" title=\"enum arrayfire::ConvMode\">ConvMode</a>","synthetic":false,"types":["arrayfire::defines::ConvMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.ConvDomain.html\" title=\"enum arrayfire::ConvDomain\">ConvDomain</a>","synthetic":false,"types":["arrayfire::defines::ConvDomain"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.MatchType.html\" title=\"enum arrayfire::MatchType\">MatchType</a>","synthetic":false,"types":["arrayfire::defines::MatchType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.ColorMap.html\" title=\"enum arrayfire::ColorMap\">ColorMap</a>","synthetic":false,"types":["arrayfire::defines::ColorMap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.SparseFormat.html\" title=\"enum arrayfire::SparseFormat\">SparseFormat</a>","synthetic":false,"types":["arrayfire::defines::SparseFormat"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.BinaryOp.html\" title=\"enum arrayfire::BinaryOp\">BinaryOp</a>","synthetic":false,"types":["arrayfire::defines::BinaryOp"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"arrayfire/enum.RandomEngineType.html\" title=\"enum arrayfire::RandomEngineType\">RandomEngineType</a>","synthetic":false,"types":["arrayfire::defines::RandomEngineType"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()