(function() {var implementors = {};
implementors["af_opencl_interop"] = [{"text":"impl RefUnwindSafe for VendorPlatform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]}];
implementors["arrayfire"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Array&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dim4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Callback","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl&lt;'object&gt; RefUnwindSafe for Indexer&lt;'object&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomEngine","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Seq&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AfError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterpType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connectivity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConvMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConvDomain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NormType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for YCCStd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HomographyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MarkerType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MomentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinaryOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomEngineType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scalar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CannyThresholdType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiffusionEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FluxFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopkFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IterativeDeconvAlgo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InverseDeconvAlgo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConvGradientType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VarianceBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CublasMathMode","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()